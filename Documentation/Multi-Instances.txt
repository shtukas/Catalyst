Multi Instances is the solution to the problem of running Catalyst both on Lucille18 and Lucille19. For a while I toyed with the idea of the two instances sharing their internals, but this doesn't work well with the idea of in memory caching. In the end the solution appear to be to develop a communication protocol between the two instances.

In practice this means that when an event occurs on one of the two instances, a message will be generated for the other one. Each instance will check for incoming messages at each UI loop. The messages will be sent between the two instances during a standard unison synchronization.

Events:

{
    "eventType" : "MultiInstanceEventType:CatalystObjectUUID+Command"
    "payload" : {
        "objectuuid" : String
        "command"    : String
    }
}

{
    "eventType" : "MultiInstanceEventType:DoNotShowUntil"
    "payload" : {
        "objectuuid" : String
        "datetime"   : String, DateTime
    }
}

{
    "eventType" : "MultiInstanceEventType:RunTimesPoint"
    "payload" : {
        "uuid"          : String,
        "collectionuid" : String,
        "unixtime"      : Integer,
        "algebraicTimespanInSeconds" => Integer
    }
}

{
    "eventType" : "MultiInstanceEventType:MetaDataStoreUpdate"
    "payload" : {
        "uid"   : String,
        "key"   : String,
        "value" : Value
    }
}