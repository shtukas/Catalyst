#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require "/Users/pascal/Galaxy/LucilleOS/Libraries/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Libraries/Ruby-Libraries/BTreeSets.rb"
=begin
    BTreeSets::values(repositorylocation or nil, setuuid: String): Array[Value]
    BTreeSets::set(repositorylocation or nil, setuuid: String, valueuuid: String, value)
    BTreeSets::getOrNull(repositorylocation or nil, setuuid: String, valueuuid: String): nil | Value
    BTreeSets::destroy(repositorylocation, setuuid: String, valueuuid: String)
=end

# -----------------------------------------------------------------------------

if ARGV[0] == "open" and ARGV[1] then
    uuid = ARGV[1]
    arrow = BTreeSets::getOrNull("/Users/pascal/Galaxy/DataBank/Catalyst/Arrows", "", uuid)
    exit if arrow.nil?
    datapoint = DataPoint::getOrNull(arrow["datapointuuid"])
    exit if datapoint.nil?
    DataPoint::openDataPoint(datapoint)
end

if ARGV[0] == "done" and ARGV[1] then
    uuid = ARGV[1]
    BTreeSets::destroy("/Users/pascal/Galaxy/DataBank/Catalyst/Arrows", "", uuid)
end
