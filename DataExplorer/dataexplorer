#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'date'
require 'colorize'
require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'time'

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'find'
require 'thread'

require "/Users/pascal/Galaxy/LucilleOS/Libraries/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Common.rb"

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/DataPoints.rb"

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Starlight.rb"

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/DataPointsSearch.rb"

# --------------------------------------------------------------------

class DataExplorer

    # DataExplorer::userinterface()
    def self.userinterface()
        loop {
            system("clear")
            puts "Data Navigation And Search üó∫Ô∏è"
            operations = [
                "Navigation",
                "Search",
                "starlight management",
                "datapoint dive (uuid)",
            ]
            operation = LucilleCore::selectEntityFromListOfEntitiesOrNull("operation", operations)
            break if operation.nil?
            if operation == "Navigation" then
                StarlightNavigation::navigation()
            end
            if operation == "Search" then
                DataPointsSearch::search()
            end
            if operation == "starlight management" then
                StarlightManagement::management()
            end
            if operation == "dive datapoint by uuid" then
                uuid = LucilleCore::askQuestionAnswerAsString("uuid: ")
                datapoint = DataPoints::getOrNull(uuid)
                next if datapoint.nil?
                DataPoints::pointDive(datapoint)
            end
        }
    end
end

DataExplorer::userinterface()

