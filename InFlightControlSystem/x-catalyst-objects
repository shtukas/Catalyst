#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'date'
require 'colorize'

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'find'

require "/Users/pascal/Galaxy/LucilleOS/Libraries/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Libraries/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/DoNotShowUntil.rb"
#    DoNotShowUntil::setUnixtime(uid, unixtime)
#    DoNotShowUntil::isVisible(uid)

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Mercury.rb"
=begin
    Mercury::postValue(channel, value)

    Mercury::discardFirstElementsToEnforeQueueSize(channel, size)
    Mercury::discardFirstElementsToEnforceTimeHorizon(channel, unixtime)

    Mercury::getQueueSize(channel)
    Mercury::getAllValues(channel)

    Mercury::getFirstValueOrNull(channel)
    Mercury::deleteFirstValue(channel)
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Runner.rb"
=begin 
    Runner::isRunning(uuid)
    Runner::runTimeInSecondsOrNull(uuid) # null | Float
    Runner::start(uuid)
    Runner::stop(uuid) # null | Float
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/DataEntities.rb"

require_relative "InFlightControlSystem.rb"

# -------------------------------------------------------------------------

InFlightControlSystem::claimsOrdered()
    .each{|claim|
        uuid = claim["uuid"]
        ordinal = InFlightControlSystem::getClaimOrdinalOrNull(uuid)
        DailyTimes::addNegativeTimePerOrdinalToBankOrDoNothing(uuid, DAILY_TOTAL_ORDINAL_TIME_IN_HOURS, ordinal, [1,2,3,4,5,6]) # 3 hours in total, Monday to Saturday
    }

# -------------------------------------------------------------------------

objects = []

InFlightControlSystem::claimsOrdered()
    .each{|claim|

        defaultCommand = lambda {|isRunning|
            isRunning ? "stop" : "start"
        }

        uuid = claim["uuid"]
        isRunning = Runner::isRunning(uuid)
        isRunningForLong = ((Runner::runTimeInSecondsOrNull(uuid) || 0) > 3600)

        objects << {
            "uuid"           => uuid,
            "contentItem"    => {
                "type" => "line",
                "line" => (InFlightControlSystem::claimToStringOrNull(claim) || "ifcs claim default toString")
            },
            "metric"         => InFlightControlSystem::metric(claim),
            "commands"       => ["start", "open", "stop", "completed", "dive"],
            "defaultCommand" => defaultCommand.call(isRunning),
            "isRunning"      => isRunning,
            "shell-redirects" => {
                "start"       => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/x-catalyst-objects-processing start '#{uuid}'",
                "open"        => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/x-catalyst-objects-processing open '#{uuid}'",
                "stop"        => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/x-catalyst-objects-processing stop '#{uuid}'",
                "completed"   => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/x-catalyst-objects-processing completed '#{uuid}'"
            },
            "isRunningForLong" => isRunningForLong,
            "x-ifcs:claim" => claim,
            "x-ifcs:bank" => Bank::total(uuid)
        }
    }

puts JSON.generate(objects)
