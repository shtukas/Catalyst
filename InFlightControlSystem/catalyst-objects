#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'date'
require 'colorize'

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'find'

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/Mercury.rb"
=begin
    Mercury::postValue(channel, value)

    Mercury::discardFirstElementsToEnforeQueueSize(channel, size)
    Mercury::discardFirstElementsToEnforceTimeHorizon(channel, unixtime)

    Mercury::getQueueSize(channel)
    Mercury::getAllValues(channel)

    Mercury::getFirstValueOrNull(channel)
    Mercury::deleteFirstValue(channel)
=end

require_relative "InFlightControlSystem.rb"

# -------------------------------------------------------------------------

while (packet = Mercury::getFirstValueOrNull("95df0a03-2bf5-4d7a-a911-b6d67bed8d09")) do
    description = packet["description"]
    text = packet["text"]
    position = packet["position"]
    InFlightControlSystem::newItemPayloadText(description, position, text)
    Mercury::deleteFirstValue("95df0a03-2bf5-4d7a-a911-b6d67bed8d09")
end

InFlightControlSystem::distributeDayTimeCommitmentsIfNotDoneAlready()

def catalystObject(uuid)
    isRunning = InFlightControlSystem::isRunning(uuid)
    runTime = InFlightControlSystem::runTimeInSecondsOrNull(uuid)
    runTimeAsString = runTime ? " (running for #{(runTime.to_f/3600).round(2)} hours)" : ""
    {
        "uuid"            => uuid,
        "contentItem"     => {
            "type" => "line",
            "line" => "[ifcs #{"%5.2f" % (InFlightControlSystem::storedTimespan(uuid).to_f/3600)}] [#{InFlightControlSystem::getPayloadType(uuid)}] #{InFlightControlSystem::getDescription(uuid)}#{runTimeAsString}"
        },
        "metric"          => InFlightControlSystem::metric(uuid),
        "commands"        => ["open", "edit"],
        "isRunning"       => isRunning,
        "defaultCommand"  => isRunning ? "stop" : "start",
        "shell-redirects" => {
            "open"   => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/catalyst-objects-processing open '#{uuid}'",
            "edit"   => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/catalyst-objects-processing edit '#{uuid}'",
            "start"  => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/catalyst-objects-processing start '#{uuid}'",
            "stop"   => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/catalyst-objects-processing stop '#{uuid}'",
        }
    }
end

objects = InFlightControlSystem::uuidsOrderedByPosition()
            .map{|uuid| catalystObject(uuid) }
            .first(5) # dive, guardian work, and then 3 focuses

puts JSON.generate(objects)
