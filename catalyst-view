#!/usr/bin/ruby

# encoding: UTF-8

require 'json'

require 'date'

require 'colorize'

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')
require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest
require 'find'

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'drb/drb'

require "/Galaxy/local-resources/Ruby-Libraries/LucilleCore.rb"
require "/Galaxy/LucilleOS/Librarian/Librarian-Exported-Functions.rb"

require_relative "catalyst.rb"

# -----------------------------------------------------------------

class CatalystViewUtils
    def self.viewloop()
        objectToLineMainListing = lambda {|object, index|
            "#{"%2d" % (index+1)}     #{CommonsUtils::object2Line_v0(object)[0,CommonsUtils::screenWidth()-9]}"
        }
        objectToLineOrdinalListing = lambda {|object, ordinal, index|
            "#{"%2d" % (index+1)}     [#{("%.3f" % ordinal).rjust(16)}] #{CommonsUtils::object2Line_v0(object)[0,CommonsUtils::screenWidth()-9]}"
        }
        loop {
            screenleft = CommonsUtils::screenHeight()-3
            FlockDiskIO::loadFromEventsTimeline()
            objects = FlockOperator::topObjects(screenleft)
            system("clear")
            puts ""
            pairs = Ordinals::sortedDistribution()
                .select{|pair| TheFlock::getObjectByUUIDOrNull(pair[0]) }
            pairs.each_with_index{|pair, index|
                    uuid = pair[0]
                    ordinal = pair[1]
                    object = TheFlock::getObjectByUUIDOrNull(uuid)
                    puts objectToLineOrdinalListing.call(object, ordinal, index).yellow
                    screenleft = screenleft - 1
                }
            if pairs.size>0 then
                puts ""
                screenleft = screenleft - 1
            end
            if RequirementsOperator::getCurrentlyUnsatisfiedRequirements().size>0 then
                puts "REQUIREMENTS: OFF: #{RequirementsOperator::getCurrentlyUnsatisfiedRequirements().join(", ")}".yellow
                screenleft = screenleft - 1
            end      
            # --------------------------------------------------------------------------------
            objects.take(screenleft).each_with_index{|object, index|
                puts objectToLineMainListing.call(object, index)
            }
            sleep 10
        }
    end
end

CatalystViewUtils::viewloop()
