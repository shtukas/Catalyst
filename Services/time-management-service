#!/usr/bin/ruby

# encoding: UTF-8

require_relative "time-management-service-core.rb"

class Interface

    def start(uid)
        Chronos::start(uid)
    end 

    def isRunning(uid)
        Chronos::isRunning(uid)
    end

    def stopAndAddTimeSpan(uid)
        timespan = Chronos::stop(uid)
        Chronos::addTimespan(uid, timespan)
    end

    def metric2(uid, referencePeriodInDays, commitmentPerReferencePeriodInHours, metricAtFullyDone, metricAtZeroDone, metricRunning)
        Chronos::metric2(uid, referencePeriodInDays, commitmentPerReferencePeriodInHours, metricAtFullyDone, metricAtZeroDone, metricRunning)
    end

    def getEntityTotalTimespanForPeriod(uid, referencePeriodInDays)
        Chronos::getEntityTotalTimespanForPeriod(uid, referencePeriodInDays)
    end

    def getEntityTotalTimespan(uid)
        Chronos::getEntityTotalTimespan(uid)
    end

    def addTimeSpan(uid, timespan)
        Chronos::addTimespan(uid, timespan)
    end
end

DRb.start_service("druby://:10423", Interface.new())
DRb.thread.join

