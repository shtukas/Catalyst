#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

# --------------------------------------------------------------------

require_relative "OpenCycles.rb"

# -----------------------------------------------------------------------------

if ARGV[0] == "ack" and ARGV[1] then
    uuid = ARGV[1]
    KeyValueStore::setFlagTrue(nil, "#{Time.new.to_s[0, 10]}:da72d6d2-fd9e-48dd-b6f6-f1dc28b3337e:#{uuid }")
end

if ARGV[0] == "open" and ARGV[1] then
    uuid  = ARGV[1]
    OpenCycles::exportContentsAtDesktop(uuid)
end

if ARGV[0] == "start" and ARGV[1] then
    uuid  = ARGV[1]
    InFlightControlSystem::start(uuid)
end

if ARGV[0] == "stop" and ARGV[1] then
    uuid = ARGV[1]
    InFlightControlSystem::stop(uuid)
end
