#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'date'
require 'colorize'

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'find'

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Common.rb"

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Runner.rb"
=begin 
    Runner::isRunning(uuid)
    Runner::runTimeInSecondsOrNull(uuid) # null | Float
    Runner::start(uuid)
    Runner::stop(uuid) # null | Float
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Bank.rb"
=begin 
    Bank::put(uuid, weight, validityTimespan)
    Bank::total(uuid)
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/DailyTimes.rb"

# -------------------------------------------------------------------------

def objectuuid()
    "39909ff4-e102-45c2-ace9-21be21572772"
end

DailyTimes::putTimeToBankNoOftenThanOnceADay(objectuuid(), 6*3600, [1, 2, 3, 4, 5]) # 6 hours, Monday to Friday

timeInBank = Bank::total(objectuuid())
isRunning = Runner::isRunning(objectuuid())
metric = 
    if timeInBank < 0 then
        0.72 + 0.05*(1-Math.exp(timeInBank.to_f/3600))
    else
        0.72*Math.exp(-timeInBank.to_f/3600)
    end
metric = isRunning ? 1 : metric
isRunningForLong = (Runner::runTimeInSecondsOrNull(objectuuid()) || 0) > 3600
isDone = (isRunning and (timeInBank+(Runner::runTimeInSecondsOrNull(objectuuid()) || 0)) >= 0)

object = {
    "uuid"            => objectuuid(),
    "contentItem"     => {
        "type" => "line",
        "line" => "Guardian Work (bank: #{(timeInBank.to_f/3600).round(2)} hours)#{isRunning ? " (running for #{Runner::runTimeInSecondsOrNull(objectuuid()).to_f/3600} hours)" : ""}"
    },
    "metric"          => metric,
    "commands"        => [],
    "defaultCommand"  => isRunning ? "stop" : "start",
    "isRunning"       => isRunning,
    "isRunningForLong" => isRunningForLong,
    "isDone"          => isDone,
    "shell-redirects" => {
        "start" => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Gwork/x-catalyst-objects-processing start",
        "stop" => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Gwork/x-catalyst-objects-processing stop"
    }
}
puts JSON.generate([object])

