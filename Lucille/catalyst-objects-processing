#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

# --------------------------------------------------------------------

require_relative "Lucille.rb"

# -----------------------------------------------------------------------------

if ARGV[0] == "inbox-catalyst-command" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    puts "opening..."
    LucilleThisCore::openLocation(location)
    LXUserInterface::locationDive(location)
end

if ARGV[0] == "start" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    LXRunManagement::startLocation(location)
end

if ARGV[0] == "stop" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    timespan = LXRunManagement::stopLocation(location)
    exit if timespan.nil?
    LXCluster::processIncomingLocationTimespan(location, timespan)
    LXCluster::curateOrRespawnCluster()
end

if ARGV[0] == "open" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    LucilleThisCore::openLocation(location)
end

if ARGV[0] == "set-description" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    description = LucilleCore::askQuestionAnswerAsString("description: ")
    LucilleThisCore::setDescription(location, description)
end

if ARGV[0] == "recast" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    LXUserInterface::recastLucilleLocation(location)
end

if ARGV[0] == "ifcs" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    LXUserInterface::ifcsLucilleLocation(location)
end

if ARGV[0] == "move-to-nyx" then
    location = ARGV[1]
    exit if !File.exists?(location)
    LucilleThisCore::transformIntoNyxItem(location)
    exit
end

if ARGV[0] == "done" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    LXUserInterface::doneLucilleLocation(location)
end
