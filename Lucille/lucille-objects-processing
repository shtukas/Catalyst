#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

# --------------------------------------------------------------------

require_relative "Lucille.rb"

# -----------------------------------------------------------------------------

openableFileExtensions3 = [
    ".txt",
    ".jpg"
]

openableFileExtensions4 = [
    ".webm",
]

if ARGV[0] == "open" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    if File.directory?(location) then
        system("open '#{location}'")
        exit
    end
    FileUtils.cp(location, "/Users/pascal/Desktop/#{File.basename(location)}")
    if File.file?(location) and openableFileExtensions3.include?(location[-4, 4]) then
        system("open '#{location}'")
        exit
    end
    if File.file?(location) and openableFileExtensions4.include?(location[-5, 5]) then
        system("open '#{location}'")
        exit
    end
end

if ARGV[0] == "apply-next-to-text" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    exit if location[-4, 4] != ".txt"
    content = IO.read(location).strip
    content = Lucille::applyNextTransformationToContentIfText(content)
    File.open(filepath, "w"){|f| f.puts(content) }
end

if ARGV[0] == "migration" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    systems = [
        "Todo"
    ]
    targetsystem = LucilleCore::selectEntityFromListOfEntitiesOrNull("target system", systems)
    exit if targetsystem.nil?
    if targetsystem == "Todo" then
        newtodoitemlocation = `/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Todo/make-tnode-from-location '#{location}'`.strip
        if File.exists?(newtodoitemlocation) then
            # We are fairly confident that the todo process succeeded
            # We can get rid of the Lucille item
            Lucille::deleteLucilleLocation(location)
        end
    end
end

if ARGV[0] == "done" and ARGV[1] then
    location = ARGV[1]
    exit if !File.exists?(location)
    Lucille::deleteLucilleLocation(location)
end
