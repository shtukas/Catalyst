#!/usr/bin/ruby

# encoding: UTF-8
require 'json'
# JSON.pretty_generate(object)

require 'date'
require 'colorize'
require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"
require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')
require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest
require 'find'
require 'drb/drb'
require 'thread'

require "/Users/pascal/Galaxy/2020-LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/2020-LucilleOS/Software-Common/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

# -----------------------------------------------------------------

require_relative "NSXConstants.rb"
require_relative "NSXMiscLibraries/load-library.rb"
require_relative "NSXAgents/load-library.rb"

# -------------------------------------------------------------------------

CATALYST_RUN_HASH = SecureRandom.hex
CATALYST_CODE_FOLDERPATH = File.dirname(__FILE__) 
CATALYST_INBOX_DROPOFF_FOLDERPATH = "/Users/pascal/Desktop/Catalyst-Inbox"
STARTING_CODE_HASH = NSXEstateServices::locationHashRecursively(CATALYST_CODE_FOLDERPATH)

$LUCILLE_CALENDAR_FILEPATH_44AF92E9 = nil

# -------------------------------------------------------------------------
# nslog

# -------------------------------------------------------------------------

NSXEstateServices::archivesTimelineGarbageCollectionEnvelop(true)

Thread.new {
    loop {
        sleep 130
        NSXCatalystObjectsOperator::screenNotificationsForAllDoneObjects()
    }
}

NSXCatalystUI::standardUILoop()

# -------------------------------------------------------------------------
