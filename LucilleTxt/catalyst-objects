#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'date'
require 'colorize'

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'find'

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/SectionsType0141.rb"
# SectionsType0141::contentToSection(text)

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Runner.rb"
=begin 
    Runner::isRunning(uuid)
    Runner::runTimeInSecondsOrNull(uuid) # null | Float
    Runner::start(uuid)
    Runner::stop(uuid) # null | Float
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Ping.rb"
=begin 
    Ping::ping(uuid, weight, timespan)
    Ping::pong(uuid)
=end

# -------------------------------------------------------------------------

def sectionToUUID(section)
    "#{Time.new.to_s[0,10]}-#{Digest::SHA1.hexdigest(section)}"
end

# -----------------------------------------------------------------------------

content = IO.read("/Users/pascal/Desktop/Lucille.txt").split('@separation-e3cdf0ec-4119-43d8-8701-a363a74c398b').map{|part| part.strip }[1]

objects = SectionsType0141::contentToSections(content)
    .first(10)
    .map
    .with_index{|section, indx|
        sectionuuid = sectionToUUID(section)
        isRunning = Runner::isRunning("d81479f8-8d0a-473e-aef0-b14cfcaa0ae0:#{sectionuuid}")
        metric = isRunning ? 1 : (0.74 - indx.to_f/10000 - (0.2/3600)*Ping::pong("lucilletxt:f5c4f321-3a0a-4b58-b3db-a2e940160bad")) # We count seconds over the past 24 hours, one hour we go down by 0.2
        {
            "uuid"           => sectionuuid,
            "contentItem"    => {
                "type" => "line-and-body",
                "line" => "Lucille.txt [bottom] #{section.strip.lines.to_a.first}",
                "body" => "Lucille.txt [bottom]\n"+section.strip
            },
            "metric"          => metric,
            "commands"        => ["start", "stop", "done", ">project"],
            "defaultCommand"  => isRunning ? "stop" : "start",
            "isRunning" => isRunning,
            "shell-redirects" => {
                "start" => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/LucilleTxt/catalyst-objects-processing start #{sectionuuid}",
                "stop" => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/LucilleTxt/catalyst-objects-processing stop #{sectionuuid}",
                "done" => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/LucilleTxt/catalyst-objects-processing done #{sectionuuid}",
                ">project" => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/LucilleTxt/catalyst-objects-processing moveToProjects #{sectionuuid}"
            },
            "pong" => Ping::pong("lucilletxt:f5c4f321-3a0a-4b58-b3db-a2e940160bad")
        }
    }

puts JSON.generate(objects)
