#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'date'
require 'colorize'

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'find'

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Runner.rb"
=begin 
    Runner::isRunning(uuid)
    Runner::runTimeInSecondsOrNull(uuid) # null | Float
    Runner::start(uuid)
    Runner::stop(uuid) # null | Float
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/Bank.rb"
=begin 
    Bank::put(uuid, weight)
    Bank::total(uuid)
=end

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/CatalystStandardTargets.rb"

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/DailyTimes.rb"

require "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Catalyst/SectionsType0141.rb"
# SectionsType0141::contentToSections(text)

# -----------------------------------------------------------------------------

PATH_TO_DESKTOP_FILE = "/Users/pascal/Desktop/Lucille.txt"

LUCILLE_UUID = "e287b121-9ee9-4fc5-81ba-ef1c956c201b"

def section2sectionUuid(section)
    "2c84d63c-1a2a-4b0c-ae39-638acbfb9da1:#{Digest::SHA1.hexdigest(section)}"
end

def lucilleMetric()
    timeInBank = Bank::total(LUCILLE_UUID)
    isRunning = Runner::isRunning(LUCILLE_UUID)
    if timeInBank < 0 then
        0.70 + 0.05*(1-Math.exp(timeInBank.to_f/3600))
    else
        0.70*Math.exp(-timeInBank.to_f/3600)
    end
end

# -----------------------------------------------------------------------------

DailyTimes::putTimeToBankNoOftenThanOnceADay(LUCILLE_UUID, -2*3600, [1, 2, 3, 4, 5, 6]) # 2 hours, Monday to Saturday

objects = []

SectionsType0141::contentToSections(IO.read(PATH_TO_DESKTOP_FILE))
    .each_with_index{|section, indx|
        uuid = section2sectionUuid(section)
        isRunning = Runner::isRunning(uuid)
        isRunningForLong = (Bank::total(LUCILLE_UUID)+(Runner::runTimeInSecondsOrNull(uuid) || 0)) >= 0
        metric = lucilleMetric() - indx.to_f/1000
        object = {
            "uuid" => uuid,
            "contentItem" => {
                "type" => "block",
                "block" => section.strip
            },
            "metric" => isRunning ? 1 : (lucilleMetric() - indx.to_f/1000),
            "commands" => ["done"],
            "defaultCommand" => isRunning ? "stop" : "start",
            "isRunning" => isRunning,
            "isRunningForLong" => isRunningForLong,
            "shell-redirects" => {
                "start" => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/LucilleTxt/x-catalyst-objects-processing start '#{uuid}'",
                "stop"  => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/LucilleTxt/x-catalyst-objects-processing stop '#{uuid}'",
                "done"  => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/LucilleTxt/x-catalyst-objects-processing done '#{uuid}'"
            }
        }
        objects << object
    }

puts JSON.generate(objects)
