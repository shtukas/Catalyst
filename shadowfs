#!/usr/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'date'

require 'securerandom'
# SecureRandom.hex    #=> "eb693ec8252cd630102fd0d0fb7c3485"
# SecureRandom.hex(4) #=> "eb693123"
# SecureRandom.uuid   #=> "2d931510-d99f-494a-8c67-87feb05e1594"

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require 'digest/sha1'
# Digest::SHA1.hexdigest 'foo'
# Digest::SHA1.file(myFile).hexdigest

require 'find'

require_relative "LucilleCore.rb"

require_relative "KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation or nil, key)
    KeyValueStore::setFlagFalse(repositorylocation or nil, key)
    KeyValueStore::flagIsTrue(repositorylocation or nil, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

require_relative "ShadowFS.rb"

# -------------------------------------------------------------------------

# ./shadowfs commit <location>
# ./shadowfs get SHA256-f4b2ac2b19168a141f573e1d1dd6585e172d905d8b9d470b400760a19de63263

if ARGV[0] == "commit" and ARGV[1] then
    location = ARGV[1]
    puts ShadowFS::commitLocationReturnHash(ShadowFSOperator.new(), location)
    exit
end

if ARGV[0] == "get" and ARGV[1] then
    nhash = ARGV[1]
    print ShadowFSOperator.new().readBlobErrorIfNotFound(nhash)
    exit
end


puts "./shadowfs commit <location>"
puts "./shadowfs get <nhash>"

exit
