#!/usr/bin/ruby

# encoding: UTF-8

require_relative "Libs/loader.rb"

# ----------------------------------------------------------------------------

LucilleCore::locationsAtFolder("/Users/pascal/Desktop/Quarks Inbox").each{|location|

        sleep 0.5

        system("clear")

        puts location
        filepath = "/Users/pascal/Galaxy/DataBank/Catalyst/Elbrams/quarks/#{Quarks::computeLowL22()}.marble"

        Elbrams::issueNewEmptyElbram(filepath)

        uuid = SecureRandom.uuid

        Elbrams::set(filepath, "uuid", uuid)
        Elbrams::set(filepath, "unixtime", Time.new.to_i)
        Elbrams::set(filepath, "domain", "quarks")

        description = File.basename(location) 
        Elbrams::set(filepath, "description", description)

        Elbrams::set(filepath, "type", "AionPoint")

        payload = AionCore::commitLocationReturnHash(ElbramElizabeth.new(filepath), location)
        Elbrams::set(filepath, "payload", payload)

        LucilleCore::removeFileSystemLocation(location)

}

Thread.new {
    loop {
        sleep 120
        if ProgrammableBooleans::trueNoMoreOftenThanEveryNSeconds("f5f52127-c140-4c59-85a2-8242b546fe1f", 3600) then
            system("#{File.dirname(__FILE__)}/../../vienna-import")
        end
    }
}

UIServices::catalystDisplayLoop()
