#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/KeyValueStore.rb"
=begin
    KeyValueStore::setFlagTrue(repositorylocation, key)
    KeyValueStore::setFlagFalse(repositorylocation, key)
    KeyValueStore::flagIsTrue(repositorylocation, key)

    KeyValueStore::set(repositorylocation or nil, key, value)
    KeyValueStore::getOrNull(repositorylocation or nil, key)
    KeyValueStore::getOrDefaultValue(repositorylocation or nil, key, defaultValue)
    KeyValueStore::destroy(repositorylocation or nil, key)
=end

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/Mercury.rb"
=begin
    Mercury::postValue(channel, value)
    Mercury::dequeueFirstValueOrNull(channel)

    Mercury::discardFirstElementsToEnforeQueueSize(channel, size)
    Mercury::discardFirstElementsToEnforceTimeHorizon(channel, unixtime)

    Mercury::getQueueSize(channel)
    Mercury::getAllValues(channel)

    Mercury::getFirstValueOrNull(channel)
    Mercury::deleteFirstValue(channel)
=end

require_relative "Nyx.rb"

# --------------------------------------------------------------------

def get24HoursSize()
    Mercury::getQueueSize("14f50e3a-25f5-4e8b-86c7-71d55b10ee9b")
end

Mercury::discardFirstElementsToEnforceTimeHorizon("14f50e3a-25f5-4e8b-86c7-71d55b10ee9b", Time.new.to_i - 86400)

metric = 0.2 + 0.6*Math.exp(-get24HoursSize().to_f/50)

object = {
    "uuid"           => "EF4A84FB-558E-43FA-B300-D02476783433",
    "contentItem"    => {
        "type" => "line",
        "line" => "Nyx Review (#{get24HoursSize() - 50})"
    },
    "metric"         => metric,
    "commands"       => [],
    "defaultCommand" => "run",
    "shell-redirects" => {
        "run"  => "/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/Nyx/nyx-review-run"
    }
}

puts JSON.generate([object])
