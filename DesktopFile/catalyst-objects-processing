#!/Users/pascal/.rvm/rubies/ruby-2.5.1/bin/ruby

# encoding: UTF-8

require 'json'
# JSON.pretty_generate(object)

require 'fileutils'
# FileUtils.mkpath '/a/b/c'
# FileUtils.cp(src, dst)
# FileUtils.mv 'oldname', 'newname'
# FileUtils.rm(path_to_image)
# FileUtils.rm_rf('dir/to/remove')

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/LucilleCore.rb"

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/SectionsType0141.rb"
# SectionsType0141::contentToSections(text)

require "/Users/pascal/Galaxy/LucilleOS/Software-Common/Ruby-Libraries/Mercury.rb"
=begin
    Mercury::postValue(channel, value)
    Mercury::dequeueFirstValueOrNull(channel)

    Mercury::discardFirstElementsToEnforeQueueSize(channel, size)
    Mercury::discardFirstElementsToEnforceTimeHorizon(channel, unixtime)

    Mercury::getQueueSize(channel)
    Mercury::getAllValues(channel)

    Mercury::getFirstValueOrNull(channel)
    Mercury::deleteFirstValue(channel)
=end

require_relative "../Catalyst-Common/Catalyst-Common.rb"

# --------------------------------------------------------------------

PATH_TO_DESKTOP_FILE = "/Users/pascal/Desktop/Lucille.txt"

def sectionToUUID(section)
    "#{Time.new.to_s[0,10]}-#{Digest::SHA1.hexdigest(section)}"
end

def rewriteLucilleFileWithoutThisSectionUUID(sectionuuid)
    CatalystCommon::copyLocationToCatalystBin(PATH_TO_DESKTOP_FILE)

    parts = IO.read("/Users/pascal/Desktop/Lucille.txt").split('@separation-e3cdf0ec-4119-43d8-8701-a363a74c398b')
    part1 = parts[0].strip
    part2 = parts[1].strip

    sections = SectionsType0141::contentToSections(part2)
        .reject{|section|
            sectionToUUID(section) == sectionuuid
        }

    part2 = sections.map{|section| section.strip }.join("\n\n")
    content = [part1, part2].join("\n\n@separation-e3cdf0ec-4119-43d8-8701-a363a74c398b\n\n")
    File.open(PATH_TO_DESKTOP_FILE, "w"){|f| f.puts(content) }
end

def getSectionFromFileBySectionUUIDOrNull(sectionuuid)
    parts = IO.read("/Users/pascal/Desktop/Lucille.txt").split('@separation-e3cdf0ec-4119-43d8-8701-a363a74c398b')
    part1 = parts[0].strip
    part2 = parts[1].strip

    SectionsType0141::contentToSections(part2)
        .select{|section|
            sectionToUUID(section) == sectionuuid
        }
        .first
end

def timeStringL22()
    "#{Time.new.strftime("%Y%m%d-%H%M%S-%6N")}"
end

# -----------------------------------------------------------------------------

if ARGV[0] == "done" and ARGV[1] then
    sectionuuid = ARGV[1]
    section = getSectionFromFileBySectionUUIDOrNull(sectionuuid)
    if section then
        CatalystCommon::commitTextToCatalystBin("Lucille File Fragment.text", section)
    end
    rewriteLucilleFileWithoutThisSectionUUID(sectionuuid)
end

if ARGV[0] == "tolucille" and ARGV[1] then
    sectionuuid = ARGV[1]
    section = getSectionFromFileBySectionUUIDOrNull(sectionuuid)
    exit if section.nil?
    CatalystCommon::commitTextToCatalystBin("Lucille File Fragment.text", section)
    Mercury::postValue("AF39EC62-4779-4C00-85D9-D2F19BD2D71E", section)
    rewriteLucilleFileWithoutThisSectionUUID(sectionuuid)
end

if ARGV[0] == "toopencycles" and ARGV[1] then
    sectionuuid = ARGV[1]
    section = getSectionFromFileBySectionUUIDOrNull(sectionuuid)
    exit if section.nil?
    CatalystCommon::commitTextToCatalystBin("Lucille File Fragment.text", section)
    section = CatalystCommon::editTextUsingTextmate(section)
    Mercury::postValue("b4efb93f-488d-4984-96bd-d4e453ebb00e", section)
    rewriteLucilleFileWithoutThisSectionUUID(sectionuuid)
end

if ARGV[0] == "toifcs" and ARGV[1] then
    sectionuuid = ARGV[1]
    section = getSectionFromFileBySectionUUIDOrNull(sectionuuid)
    exit if section.nil?
    CatalystCommon::commitTextToCatalystBin("Lucille File Fragment.text", section)
    section = CatalystCommon::editTextUsingTextmate(section)
    ifcsreport = `/Users/pascal/Galaxy/LucilleOS/Applications/Catalyst/InFlightControlSystem/ifcs-items-report`
    puts ifcsreport
    packet = {
        "description" => section.lines.first.strip,
        "position"    => LucilleCore::askQuestionAnswerAsString("position: ").to_f,
        "text"        => section
    }
    Mercury::postValue("95df0a03-2bf5-4d7a-a911-b6d67bed8d09", packet)
    rewriteLucilleFileWithoutThisSectionUUID(sectionuuid)
end
